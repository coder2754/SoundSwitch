name: .NET

on:
  push:
    branches: [ dev, master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ dev, master ]
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  # DOTNET_CLI_TELEMETRY_OPTOUT: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PROJECT_NAME: "SoundSwitch"
  ARCH: "win-x64"
  FRAMEWORK: "net6.0-windows"
  NODEJS: 16
  DOTNET: "6.0.x"
  DOTNET_PRERELEASE: true
  CONFIGURATION: "Nightly"
  SENTRY_NAME: "soundswitch"

jobs:
  build:
    outputs:
      devVersion: ${{ steps.devVersion.outputs.version }}
    runs-on: windows-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          all_but_latest: true
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET }}
          include-prerelease: ${{ env.DOTNET_PRERELEASE }}
      - name: Restore
        run: dotnet restore -r ${{ env.ARCH }}
      - name: Fetch tags
        run: git fetch --tags --force
      - name: Calculate version
        id: devVersion
        run: .\devVersion.ps1
      - name: Build pre-release
        run: dotnet publish -c ${{env.CONFIGURATION}} --no-restore -r ${{ env.ARCH }} ${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj
      - name: print
        run:  ls -LR ./SoundSwitch/bin/ 
      - name: Set Env var from GitHub
        uses: rlespinasse/github-slug-action@v3.x
      - name: Zip Build ${{env.PROJECT_NAME}}-${{ steps.devVersion.outputs.version }}
        run: tar caf   ${{env.PROJECT_NAME}}-${{ steps.devVersion.outputs.version }}.zip -C ${{ env.PROJECT_NAME }}\bin\${{env.CONFIGURATION}}\${{ env.FRAMEWORK }}\${{ env.ARCH }}\publish\ *
      - name:  Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: "a.zip"
         # A file, directory or wildcard pattern that describes what to upload
          path: "${{env.PROJECT_NAME}}-${{ steps.devVersion.outputs.version }}.zip"

